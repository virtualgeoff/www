/* X_ITE v8.12.0 */(()=>{"use strict";var e={355:e=>{e.exports=window[Symbol.for("X_ITE.X3D-8.12.0")].require("lib/jquery")}},t={};function r(i){var n=t[i];if(void 0!==n)return n.exports;var a=t[i]={exports:{}};return e[i](a,a.exports,r),a.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{const e=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Components");var t=r.n(e);const i=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Fields");var n=r.n(i);const a=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Base/X3DFieldDefinition");var s=r.n(a);const o=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Base/FieldDefinitionArray");var u=r.n(o);const d=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Components/Texturing/X3DSingleTextureNode");var h=r.n(d);const p=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Base/X3DConstants");var l=r.n(p);const g=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Namespace");var x=r.n(g);function T(e){h().call(this,e),this.addType(l().X3DEnvironmentTextureNode);const t=this.getBrowser().getContext();this.target=t.TEXTURE_CUBE_MAP,this.targets=[t.TEXTURE_CUBE_MAP_POSITIVE_Z,t.TEXTURE_CUBE_MAP_NEGATIVE_Z,t.TEXTURE_CUBE_MAP_NEGATIVE_X,t.TEXTURE_CUBE_MAP_POSITIVE_X,t.TEXTURE_CUBE_MAP_POSITIVE_Y,t.TEXTURE_CUBE_MAP_NEGATIVE_Y]}Object.assign(Object.setPrototypeOf(T.prototype,h().prototype),{getTarget(){return this.target},getTextureType:()=>4,getTextureTypeString:()=>"CUBE",getTargets(){return this.targets},clearTexture:(()=>{const e=new Uint8Array([255,255,255,255]);return function(){const t=this.getBrowser().getContext();t.bindTexture(this.getTarget(),this.getTexture());for(const r of this.getTargets())t.texImage2D(r,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,e);this.setTransparent(!1)}})(),updateTextureParameters(){h().prototype.updateTextureParameters.call(this,this.target,this._textureProperties.getValue(),this.texturePropertiesNode,128,128,!1,!1,!1)},setShaderUniforms(e,t,r,i=t.x3d_Texture[0]){const n=this.getBrowser().getTextureCubeUnit();e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_CUBE_MAP,this.getTexture()),e.uniform1i(i.textureCube,n)}}),Object.defineProperties(T,{typeName:{value:"X3DEnvironmentTextureNode",enumerable:!0},componentName:{value:"CubeMapTexturing",enumerable:!0}});const c=T;x().add("X3DEnvironmentTextureNode","x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode",c);const w=c,_=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Base/X3DCast");var m=r.n(_);const f=window[Symbol.for("X_ITE.X3D-8.12.0")].require("standard/Utility/BitSet");var b=r.n(f);function E(e){w.call(this,e),this.addType(l().ComposedCubeMapTexture),e.getSpecificationVersion()<4&&(this.addAlias("front",this._frontTexture),this.addAlias("back",this._backTexture),this.addAlias("left",this._leftTexture),this.addAlias("right",this._rightTexture),this.addAlias("top",this._topTexture),this.addAlias("bottom",this._bottomTexture)),this.addChildObjects(l().inputOutput,"update",new(n().SFTime)),this.textureNodes=[null,null,null,null,null,null],this.textureBits=new(b())}Object.assign(Object.setPrototypeOf(E.prototype,w.prototype),{initialize(){w.prototype.initialize.call(this);const e=this.getBrowser().getContext();this.frameBuffer=e.createFramebuffer(),this.clearTexture(),this._frontTexture.addInterest("set_texture__",this,0),this._backTexture.addInterest("set_texture__",this,1),this._leftTexture.addInterest("set_texture__",this,2),this._rightTexture.addInterest("set_texture__",this,3),this._topTexture.addInterest("set_texture__",this,5),this._bottomTexture.addInterest("set_texture__",this,4),this._update.addInterest("update",this),this.set_texture__(this._frontTexture,0),this.set_texture__(this._backTexture,1),this.set_texture__(this._leftTexture,2),this.set_texture__(this._rightTexture,3),this.set_texture__(this._topTexture,4),this.set_texture__(this._bottomTexture,5)},set_texture__(e,t){let r=this.textureNodes[t];r?.removeInterest("set_loadState__",this),r=this.textureNodes[t]=m()(l().X3DTexture2DNode,e),r?.addInterest("set_loadState__",this,r,t),this.set_loadState__(r,t)},set_loadState__(e,t){this.setTextureBit(t,e,e?.checkLoadState()??l().NOT_STARTED),this._update.addEvent()},setTextureBit(e,t,r){this.textureBits.set(e,r===l().COMPLETE_STATE||t?.getWidth())},isComplete(){if(63!=+this.textureBits)return!1;const e=this.textureNodes,t=e[0].getWidth();for(const r of e){if(r.getWidth()!==t)return!1;if(r.getHeight()!==t)return!1}return!0},update(){if(this.isComplete()){const e=this.getBrowser().getContext(),t=this.textureNodes,r=e.getParameter(e.FRAMEBUFFER_BINDING);e.bindFramebuffer(e.FRAMEBUFFER,this.frameBuffer);for(let r=0;r<6;++r){const i=t[r],n=i.getWidth(),a=i.getHeight();switch(i.getType().at(-1)){case l().ImageTexture:case l().MovieTexture:e.bindTexture(this.getTarget(),this.getTexture()),e.getVersion()>=2?e.texImage2D(this.getTargets()[r],0,e.RGBA,n,a,0,e.RGBA,e.UNSIGNED_BYTE,i.getElement()):e.texImage2D(this.getTargets()[r],0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,i.getElement());break;default:e.bindTexture(e.TEXTURE_2D,i.getTexture()),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i.getTexture(),0),e.bindTexture(this.getTarget(),this.getTexture()),e.texImage2D(this.getTargets()[r],0,e.RGBA,n,a,0,e.RGBA,e.UNSIGNED_BYTE,null),e.copyTexSubImage2D(this.getTargets()[r],0,0,0,0,0,n,a)}}e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),e.bindFramebuffer(e.FRAMEBUFFER,r),this.setTransparent(t.some((e=>e.isTransparent()))),this.updateTextureParameters()}else this.clearTexture()}}),Object.defineProperties(E,{typeName:{value:"ComposedCubeMapTexture",enumerable:!0},componentName:{value:"CubeMapTexturing",enumerable:!0},containerField:{value:"texture",enumerable:!0},specificationRange:{value:Object.freeze(["3.1","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(l().inputOutput,"metadata",new(n().SFNode)),new(s())(l().inputOutput,"description",new(n().SFString)),new(s())(l().inputOutput,"frontTexture",new(n().SFNode)),new(s())(l().inputOutput,"backTexture",new(n().SFNode)),new(s())(l().inputOutput,"leftTexture",new(n().SFNode)),new(s())(l().inputOutput,"rightTexture",new(n().SFNode)),new(s())(l().inputOutput,"topTexture",new(n().SFNode)),new(s())(l().inputOutput,"bottomTexture",new(n().SFNode)),new(s())(l().initializeOnly,"textureProperties",new(n().SFNode))]),enumerable:!0}});const y=E;x().add("ComposedCubeMapTexture","x_ite/Components/CubeMapTexturing/ComposedCubeMapTexture",y);const S=y,I=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Base/X3DBaseNode");var M=r.n(I);const O=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Rendering/X3DRenderObject");var N=r.n(O);const C=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Rendering/TraverseType");var B=r.n(C);function D(e){M().call(this,e),N().call(this,e),this.renderObject=null}Object.assign(Object.setPrototypeOf(D.prototype,M().prototype),N().prototype,{initialize(){M().prototype.initialize.call(this),N().prototype.initialize.call(this)},isIndependent:()=>!1,setRenderer(e){this.renderObject=e},getLayer(){return this.renderObject.getLayer()},getBackground(){return this.renderObject.getBackground()},getFog(){return this.renderObject.getFog()},getNavigationInfo(){return this.renderObject.getNavigationInfo()},getViewpoint(){return this.renderObject.getViewpoint()},getLightContainer(){return this.renderObject.getLights()[this.lightIndex++]},render(e,t,r){switch(e){case B().COLLISION:case B().SHADOW:N().prototype.render.call(this,e,t,r);break;case B().DISPLAY:this.lightIndex=0,N().prototype.render.call(this,e,t,r);for(const e of this.renderObject.getLights())e.modelViewMatrix.pop()}}});for(const e of Object.keys(D.prototype))Object.defineProperty(D.prototype,e,{enumerable:!1});const v=D;x().add("DependentRenderer","x_ite/Rendering/DependentRenderer",v);const X=v,R=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Rendering/TextureBuffer");var A=r.n(R);const F=window[Symbol.for("X_ITE.X3D-8.12.0")].require("standard/Math/Geometry/Camera");var U=r.n(F);const P=window[Symbol.for("X_ITE.X3D-8.12.0")].require("standard/Math/Geometry/ViewVolume");var V=r.n(P);const j=window[Symbol.for("X_ITE.X3D-8.12.0")].require("standard/Math/Numbers/Rotation4");var L=r.n(j);const G=window[Symbol.for("X_ITE.X3D-8.12.0")].require("standard/Math/Numbers/Vector3");var z=r.n(G);const q=window[Symbol.for("X_ITE.X3D-8.12.0")].require("standard/Math/Numbers/Vector4");var k=r.n(q);const Y=window[Symbol.for("X_ITE.X3D-8.12.0")].require("standard/Math/Numbers/Matrix4");var W=r.n(Y);const H=window[Symbol.for("X_ITE.X3D-8.12.0")].require("standard/Math/Algorithm");var Z=r.n(H);function $(e){w.call(this,e),this.addType(l().GeneratedCubeMapTexture),this.dependentRenderer=new X(e),this.projectionMatrix=new(W()),this.modelMatrix=new(W()),this.viewVolume=new(V())}Object.assign(Object.setPrototypeOf($.prototype,w.prototype),{initialize(){w.prototype.initialize.call(this),this._size.addInterest("set_size__",this),this.dependentRenderer.setup(),this.set_size__()},set_size__(){const e=this.getBrowser().getContext(),t=e.getVersion()>=2?this._size.getValue():Z().nextPowerOfTwo(this._size.getValue());if(t>0){const r=new Uint8Array(t*t*4);e.bindTexture(this.getTarget(),this.getTexture());for(const i of this.getTargets())e.texImage2D(i,0,e.RGBA,t,t,0,e.RGBA,e.UNSIGNED_BYTE,r);this.updateTextureParameters(),this.viewport=new(k())(0,0,t,t),this.frameBuffer=new(A())(this.getBrowser(),t,t)}else this.frameBuffer=null},traverse(e,t){"NONE"!==this._update.getValue()&&t.isIndependent()&&this.frameBuffer&&(t.getGeneratedCubeMapTextures().push(this),this.modelMatrix.assign(t.getModelViewMatrix().get()).multRight(t.getCameraSpaceMatrix().get()))},renderTexture:(()=>{const e=[new(L())(z().zAxis,new(z())(0,0,-1)),new(L())(z().zAxis,new(z())(0,0,1)),new(L())(z().zAxis,new(z())(1,0,0)),new(L())(z().zAxis,new(z())(-1,0,0)),new(L())(z().zAxis,new(z())(0,-1,0)),new(L())(z().zAxis,new(z())(0,1,0))],t=[new(z())(-1,-1,1),new(z())(-1,-1,1),new(z())(-1,-1,1),new(z())(-1,-1,1),new(z())(1,1,1),new(z())(1,1,1)],r=new(W());return function(i){this.dependentRenderer.setRenderer(i);const n=this.dependentRenderer,a=this.getBrowser(),s=i.getLayer(),o=a.getContext(),u=n.getBackground(),d=n.getNavigationInfo(),h=n.getViewpoint(),p=a.getHeadlight(),l=d._headlight.getValue(),g=d.getNearValue(),x=d.getFarValue(h),T=U().perspective(Z().radians(90),g,x,1,1,this.projectionMatrix),c=this.frameBuffer.getWidth(),w=this.frameBuffer.getHeight();this.setTransparent(u.isTransparent()),this.frameBuffer.bind(),n.getViewVolumes().push(this.viewVolume.set(T,this.viewport,this.viewport)),n.getProjectionMatrix().pushMatrix(T),o.bindTexture(this.getTarget(),this.getTexture());for(let i=0;i<6;++i)o.clear(o.COLOR_BUFFER_BIT),n.getCameraSpaceMatrix().pushMatrix(this.modelMatrix),n.getCameraSpaceMatrix().rotate(e[i]),n.getCameraSpaceMatrix().scale(t[i]),n.getViewMatrix().pushMatrix(r.assign(n.getCameraSpaceMatrix().get()).inverse()),n.getModelViewMatrix().pushMatrix(r),l&&(p.modelViewMatrix.pushMatrix(r),p.modelViewMatrix.multLeft(h.getCameraSpaceMatrix())),s.traverse(B().DISPLAY,n),l&&p.modelViewMatrix.pop(),n.getModelViewMatrix().pop(),n.getCameraSpaceMatrix().pop(),n.getViewMatrix().pop(),o.bindTexture(this.getTarget(),this.getTexture()),o.copyTexSubImage2D(this.getTargets()[i],0,0,0,0,0,c,w);this.updateTextureParameters(),n.getProjectionMatrix().pop(),n.getViewVolumes().pop(),this.frameBuffer.unbind(),"NEXT_FRAME_ONLY"===this._update.getValue()&&(this._update="NONE")}})(),setShaderUniforms:(()=>{const e=new Float32Array(16);return function(t,r,i,n){w.prototype.setShaderUniforms.call(this,t,r,i,n),i===this.dependentRenderer&&t.uniformMatrix4fv(r.x3d_ModelViewMatrix,!1,e)}})()}),Object.defineProperties($,{typeName:{value:"GeneratedCubeMapTexture",enumerable:!0},componentName:{value:"CubeMapTexturing",enumerable:!0},containerField:{value:"texture",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(l().inputOutput,"metadata",new(n().SFNode)),new(s())(l().inputOutput,"description",new(n().SFString)),new(s())(l().inputOutput,"update",new(n().SFString)("NONE")),new(s())(l().initializeOnly,"size",new(n().SFInt32)(128)),new(s())(l().initializeOnly,"textureProperties",new(n().SFNode))]),enumerable:!0}});const K=$;x().add("GeneratedCubeMapTexture","x_ite/Components/CubeMapTexturing/GeneratedCubeMapTexture",K);const J=K,Q=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Components/Networking/X3DUrlObject");var ee=r.n(Q);const te=window[Symbol.for("X_ITE.X3D-8.12.0")].require("standard/Math/Numbers/Vector2");var re=r.n(te);const ie=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/DEVELOPMENT");var ne=r.n(ie),ae=r(355);const se=new Uint8Array([255,255,255,255]),oe=[new(re())(1,1),new(re())(3,1),new(re())(0,1),new(re())(2,1),new(re())(1,0),new(re())(1,2)];function ue(e){w.call(this,e),ee().call(this,e),this.addType(l().ImageCubeMapTexture),this.image=ae("<img></img>"),this.canvas=ae("<canvas></canvas>"),this.urlStack=new(n().MFString)}Object.assign(Object.setPrototypeOf(ue.prototype,w.prototype),ee().prototype,{initialize(){w.prototype.initialize.call(this),ee().prototype.initialize.call(this);const e=this.getBrowser().getContext();e.bindTexture(this.getTarget(),this.getTexture());for(let t=0;t<6;++t)e.texImage2D(this.getTargets()[t],0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,se);this.image.on("load",this.setImage.bind(this)),this.image.on("abort error",this.setError.bind(this)),this.image.prop("crossOrigin","Anonymous"),this.requestImmediateLoad().catch(Function.prototype)},unloadData(){this.clearTexture()},loadData(){this.urlStack.setValue(this._url),this.loadNext()},loadNext(){if(0===this.urlStack.length)return this.clearTexture(),void this.setLoadState(l().FAILED_STATE);this.URL=new URL(this.urlStack.shift(),this.getExecutionContext().getBaseURL()),"data:"!==this.URL.protocol&&(this.getCache()||this.URL.searchParams.set("_",Date.now())),this.image.attr("src",this.URL.href)},setError(e){"data:"!==this.URL.protocol&&console.warn(`Error loading image '${decodeURI(this.URL.href)}'`,e.type),this.loadNext()},setImage(){ne()&&"data:"!==this.URL.protocol&&console.info(`Done loading image cube map texture '${decodeURI(this.URL.href)}'`);try{const e=this.image[0],t=this.canvas[0],r=t.getContext("2d",{willReadFrequently:!0});let i=e.width,n=e.height,a=Math.floor(i/4),s=Math.floor(n/3);Z().isPowerOfTwo(a)&&Z().isPowerOfTwo(s)&&4*a===i&&3*s===n?(t.width=i,t.height=n,r.drawImage(e,0,0)):(a=Z().nextPowerOfTwo(a),s=Z().nextPowerOfTwo(s),i=4*a,n=3*s,t.width=i,t.height=n,r.drawImage(e,0,0,e.width,e.height,0,0,i,n));const o=this.getBrowser().getContext();let u=!0;o.bindTexture(this.getTarget(),this.getTexture());for(let e=0;e<6;++e){const t=r.getImageData(oe[e].x*a,oe[e].y*s,a,s).data;if(u)for(let e=3;e<t.length;e+=4)if(255!==t[e]){u=!1;break}o.texImage2D(this.getTargets()[e],0,o.RGBA,a,s,!1,o.RGBA,o.UNSIGNED_BYTE,new Uint8Array(t.buffer))}this.updateTextureParameters(),this.setTransparent(!u),this.setLoadState(l().COMPLETE_STATE)}catch(e){this.setError({type:e.message})}},dispose(){ee().prototype.dispose.call(this),w.prototype.dispose.call(this)}}),Object.defineProperties(ue,{typeName:{value:"ImageCubeMapTexture",enumerable:!0},componentName:{value:"CubeMapTexturing",enumerable:!0},containerField:{value:"texture",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(u())([new(s())(l().inputOutput,"metadata",new(n().SFNode)),new(s())(l().inputOutput,"description",new(n().SFString)),new(s())(l().inputOutput,"load",new(n().SFBool)(!0)),new(s())(l().inputOutput,"url",new(n().MFString)),new(s())(l().inputOutput,"autoRefresh",new(n().SFTime)),new(s())(l().inputOutput,"autoRefreshTimeLimit",new(n().SFTime)(3600)),new(s())(l().initializeOnly,"textureProperties",new(n().SFNode))]),enumerable:!0}});const de=ue;x().add("ImageCubeMapTexture","x_ite/Components/CubeMapTexturing/ImageCubeMapTexture",de);const he=de;t().add({name:"CubeMapTexturing",concreteNodes:[S,J,he],abstractNodes:[w]});const pe=void 0;x().add("CubeMapTexturing","assets/components/CubeMapTexturing",pe)})()})();