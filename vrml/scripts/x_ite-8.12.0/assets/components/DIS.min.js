/* X_ITE v8.12.0 */(()=>{"use strict";var t={n:e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},d:(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const e=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Components");var n=t.n(e);const i=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Fields");var u=t.n(i);const o=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Base/X3DFieldDefinition");var p=t.n(o);const a=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Base/FieldDefinitionArray");var w=t.n(a);const l=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Components/Core/X3DChildNode");var r=t.n(l);const S=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Base/X3DConstants");var s=t.n(S);const F=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Namespace");var O=t.n(F);function c(t){r().call(this,t),this.addType(s().DISEntityManager),t.getSpecificationVersion()<=3.3&&this.addAlias("mapping",this._children)}Object.setPrototypeOf(c.prototype,r().prototype),Object.defineProperties(c,{typeName:{value:"DISEntityManager",enumerable:!0},componentName:{value:"DIS",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(w())([new(p())(s().inputOutput,"metadata",new(u().SFNode)),new(p())(s().inputOutput,"address",new(u().SFString)("localhost")),new(p())(s().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(s().inputOutput,"children",new(u().MFNode)),new(p())(s().inputOutput,"port",new(u().SFInt32)),new(p())(s().inputOutput,"siteID",new(u().SFInt32)),new(p())(s().outputOnly,"addedEntities",new(u().MFNode)),new(p())(s().outputOnly,"removedEntities",new(u().MFNode))]),enumerable:!0}});const d=c;O().add("DISEntityManager","x_ite/Components/DIS/DISEntityManager",d);const y=d,m=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Components/Core/X3DInfoNode");var I=t.n(m);const b=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Components/Networking/X3DUrlObject");var f=t.n(b);function D(t){I().call(this,t),f().call(this,t),this.addType(s().DISEntityTypeMapping)}Object.assign(Object.setPrototypeOf(D.prototype,I().prototype),f().prototype,{initialize(){I().prototype.initialize.call(this),f().prototype.initialize.call(this)},dispose(){f().prototype.dispose.call(this),I().prototype.dispose.call(this)}}),Object.defineProperties(D,{typeName:{value:"DISEntityTypeMapping",enumerable:!0},componentName:{value:"DIS",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(w())([new(p())(s().inputOutput,"metadata",new(u().SFNode)),new(p())(s().inputOutput,"load",new(u().SFBool)(!0)),new(p())(s().inputOutput,"url",new(u().MFString)),new(p())(s().inputOutput,"autoRefresh",new(u().SFTime)),new(p())(s().inputOutput,"autoRefreshTimeLimit",new(u().SFTime)(3600)),new(p())(s().initializeOnly,"category",new(u().SFInt32)),new(p())(s().initializeOnly,"country",new(u().SFInt32)),new(p())(s().initializeOnly,"domain",new(u().SFInt32)),new(p())(s().initializeOnly,"extra",new(u().SFInt32)),new(p())(s().initializeOnly,"kind",new(u().SFInt32)),new(p())(s().initializeOnly,"specific",new(u().SFInt32)),new(p())(s().initializeOnly,"subcategory",new(u().SFInt32))]),enumerable:!0}});const h=D;O().add("DISEntityTypeMapping","x_ite/Components/DIS/DISEntityTypeMapping",h);const v=h,g=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Components/Grouping/X3DGroupingNode");var T=t.n(g);const P=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Components/Core/X3DSensorNode");var _=t.n(P);function B(t){T().call(this,t),_().call(this,t),this.addType(s().EspduTransform)}Object.assign(Object.setPrototypeOf(B.prototype,T().prototype),_().prototype,{initialize(){T().prototype.initialize.call(this),_().prototype.initialize.call(this)}}),Object.defineProperties(B,{typeName:{value:"EspduTransform",enumerable:!0},componentName:{value:"DIS",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(w())([new(p())(s().inputOutput,"metadata",new(u().SFNode)),new(p())(s().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(s().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(s().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(s().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(s().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(s().inputOnly,"addChildren",new(u().MFNode)),new(p())(s().inputOnly,"removeChildren",new(u().MFNode)),new(p())(s().inputOutput,"children",new(u().MFNode)),new(p())(s().outputOnly,"isActive",new(u().SFBool)),new(p())(s().inputOnly,"set_articulationParameterValue0",new(u().SFFloat)),new(p())(s().inputOnly,"set_articulationParameterValue1",new(u().SFFloat)),new(p())(s().inputOnly,"set_articulationParameterValue2",new(u().SFFloat)),new(p())(s().inputOnly,"set_articulationParameterValue3",new(u().SFFloat)),new(p())(s().inputOnly,"set_articulationParameterValue4",new(u().SFFloat)),new(p())(s().inputOnly,"set_articulationParameterValue5",new(u().SFFloat)),new(p())(s().inputOnly,"set_articulationParameterValue6",new(u().SFFloat)),new(p())(s().inputOnly,"set_articulationParameterValue7",new(u().SFFloat)),new(p())(s().inputOutput,"address",new(u().SFString)("localhost")),new(p())(s().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(s().inputOutput,"articulationParameterCount",new(u().SFInt32)),new(p())(s().inputOutput,"articulationParameterDesignatorArray",new(u().MFInt32)),new(p())(s().inputOutput,"articulationParameterChangeIndicatorArray",new(u().MFInt32)),new(p())(s().inputOutput,"articulationParameterIdPartAttachedToArray",new(u().MFInt32)),new(p())(s().inputOutput,"articulationParameterTypeArray",new(u().MFInt32)),new(p())(s().inputOutput,"articulationParameterArray",new(u().MFFloat)),new(p())(s().inputOutput,"center",new(u().SFVec3f)),new(p())(s().inputOutput,"collisionType",new(u().SFInt32)),new(p())(s().inputOutput,"deadReckoning",new(u().SFInt32)),new(p())(s().inputOutput,"detonationLocation",new(u().SFVec3f)),new(p())(s().inputOutput,"detonationRelativeLocation",new(u().SFVec3f)),new(p())(s().inputOutput,"detonationResult",new(u().SFInt32)),new(p())(s().inputOutput,"entityCategory",new(u().SFInt32)),new(p())(s().inputOutput,"entityCountry",new(u().SFInt32)),new(p())(s().inputOutput,"entityDomain",new(u().SFInt32)),new(p())(s().inputOutput,"entityExtra",new(u().SFInt32)),new(p())(s().inputOutput,"entityID",new(u().SFInt32)),new(p())(s().inputOutput,"entityKind",new(u().SFInt32)),new(p())(s().inputOutput,"entitySpecific",new(u().SFInt32)),new(p())(s().inputOutput,"entitySubCategory",new(u().SFInt32)),new(p())(s().inputOutput,"eventApplicationID",new(u().SFInt32)(1)),new(p())(s().inputOutput,"eventEntityID",new(u().SFInt32)),new(p())(s().inputOutput,"eventNumber",new(u().SFInt32)),new(p())(s().inputOutput,"eventSiteID",new(u().SFInt32)),new(p())(s().inputOutput,"fired1",new(u().SFBool)),new(p())(s().inputOutput,"fired2",new(u().SFBool)),new(p())(s().inputOutput,"fireMissionIndex",new(u().SFInt32)),new(p())(s().inputOutput,"firingRange",new(u().SFFloat)),new(p())(s().inputOutput,"firingRate",new(u().SFInt32)),new(p())(s().inputOutput,"forceID",new(u().SFInt32)),new(p())(s().inputOutput,"fuse",new(u().SFInt32)),new(p())(s().inputOutput,"linearVelocity",new(u().SFVec3f)),new(p())(s().inputOutput,"linearAcceleration",new(u().SFVec3f)),new(p())(s().inputOutput,"marking",new(u().SFString)),new(p())(s().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(s().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(s().inputOutput,"munitionApplicationID",new(u().SFInt32)(1)),new(p())(s().inputOutput,"munitionEndPoint",new(u().SFVec3f)),new(p())(s().inputOutput,"munitionEntityID",new(u().SFInt32)),new(p())(s().inputOutput,"munitionQuantity",new(u().SFInt32)),new(p())(s().inputOutput,"munitionSiteID",new(u().SFInt32)),new(p())(s().inputOutput,"munitionStartPoint",new(u().SFVec3f)),new(p())(s().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(s().inputOutput,"port",new(u().SFInt32)),new(p())(s().inputOutput,"readInterval",new(u().SFTime)(.1)),new(p())(s().inputOutput,"rotation",new(u().SFRotation)),new(p())(s().inputOutput,"scale",new(u().SFVec3f)(1,1,1)),new(p())(s().inputOutput,"scaleOrientation",new(u().SFRotation)),new(p())(s().inputOutput,"siteID",new(u().SFInt32)),new(p())(s().inputOutput,"translation",new(u().SFVec3f)),new(p())(s().inputOutput,"warhead",new(u().SFInt32)),new(p())(s().inputOutput,"writeInterval",new(u().SFTime)(1)),new(p())(s().outputOnly,"articulationParameterValue0_changed",new(u().SFFloat)),new(p())(s().outputOnly,"articulationParameterValue1_changed",new(u().SFFloat)),new(p())(s().outputOnly,"articulationParameterValue2_changed",new(u().SFFloat)),new(p())(s().outputOnly,"articulationParameterValue3_changed",new(u().SFFloat)),new(p())(s().outputOnly,"articulationParameterValue4_changed",new(u().SFFloat)),new(p())(s().outputOnly,"articulationParameterValue5_changed",new(u().SFFloat)),new(p())(s().outputOnly,"articulationParameterValue6_changed",new(u().SFFloat)),new(p())(s().outputOnly,"articulationParameterValue7_changed",new(u().SFFloat)),new(p())(s().outputOnly,"collideTime",new(u().SFTime)),new(p())(s().outputOnly,"detonateTime",new(u().SFTime)),new(p())(s().outputOnly,"firedTime",new(u().SFTime)),new(p())(s().outputOnly,"isCollided",new(u().SFBool)),new(p())(s().outputOnly,"isDetonated",new(u().SFBool)),new(p())(s().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(s().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(s().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(s().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(s().outputOnly,"timestamp",new(u().SFTime)),new(p())(s().initializeOnly,"rtpHeaderExpected",new(u().SFBool))]),enumerable:!0}});const N=B;O().add("EspduTransform","x_ite/Components/DIS/EspduTransform",N);const z=N,E=window[Symbol.for("X_ITE.X3D-8.12.0")].require("x_ite/Components/Grouping/X3DBoundedObject");var V=t.n(E);function x(t){_().call(this,t),V().call(this,t),this.addType(s().ReceiverPdu)}Object.assign(Object.setPrototypeOf(x.prototype,_().prototype),V().prototype,{initialize(){_().prototype.initialize.call(this),V().prototype.initialize.call(this)},dispose(){V().prototype.dispose.call(this),_().prototype.dispose.call(this)}}),Object.defineProperties(x,{typeName:{value:"ReceiverPdu",enumerable:!0},componentName:{value:"DIS",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(w())([new(p())(s().inputOutput,"metadata",new(u().SFNode)),new(p())(s().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(s().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(s().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(s().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(s().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(s().outputOnly,"isActive",new(u().SFBool)),new(p())(s().inputOutput,"address",new(u().SFString)("localhost")),new(p())(s().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(s().inputOutput,"entityID",new(u().SFInt32)),new(p())(s().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(s().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(s().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(s().inputOutput,"port",new(u().SFInt32)),new(p())(s().inputOutput,"radioID",new(u().SFInt32)),new(p())(s().inputOutput,"readInterval",new(u().SFFloat)(.1)),new(p())(s().inputOutput,"receivedPower",new(u().SFFloat)),new(p())(s().inputOutput,"receiverState",new(u().SFInt32)),new(p())(s().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(p())(s().inputOutput,"siteID",new(u().SFInt32)),new(p())(s().inputOutput,"transmitterApplicationID",new(u().SFInt32)(1)),new(p())(s().inputOutput,"transmitterEntityID",new(u().SFInt32)),new(p())(s().inputOutput,"transmitterRadioID",new(u().SFInt32)),new(p())(s().inputOutput,"transmitterSiteID",new(u().SFInt32)),new(p())(s().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(p())(s().inputOutput,"writeInterval",new(u().SFFloat)(1)),new(p())(s().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(s().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(s().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(s().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(s().outputOnly,"timestamp",new(u().SFTime))]),enumerable:!0}});const R=x;O().add("ReceiverPdu","x_ite/Components/DIS/ReceiverPdu",R);const C=R;function X(t){_().call(this,t),V().call(this,t),this.addType(s().SignalPdu)}Object.assign(Object.setPrototypeOf(X.prototype,_().prototype),V().prototype,{initialize(){_().prototype.initialize.call(this),V().prototype.initialize.call(this)},dispose(){V().prototype.dispose.call(this),_().prototype.dispose.call(this)}}),Object.defineProperties(X,{typeName:{value:"SignalPdu",enumerable:!0},componentName:{value:"DIS",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(w())([new(p())(s().inputOutput,"metadata",new(u().SFNode)),new(p())(s().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(s().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(s().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(s().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(s().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(s().outputOnly,"isActive",new(u().SFBool)),new(p())(s().inputOutput,"address",new(u().SFString)("localhost")),new(p())(s().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(s().inputOutput,"data",new(u().MFInt32)),new(p())(s().inputOutput,"dataLength",new(u().SFInt32)),new(p())(s().inputOutput,"encodingScheme",new(u().SFInt32)),new(p())(s().inputOutput,"entityID",new(u().SFInt32)),new(p())(s().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(s().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(s().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(s().inputOutput,"port",new(u().SFInt32)),new(p())(s().inputOutput,"radioID",new(u().SFInt32)),new(p())(s().inputOutput,"readInterval",new(u().SFFloat)(.1)),new(p())(s().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(p())(s().inputOutput,"sampleRate",new(u().SFInt32)),new(p())(s().inputOutput,"samples",new(u().SFInt32)),new(p())(s().inputOutput,"siteID",new(u().SFInt32)),new(p())(s().inputOutput,"tdlType",new(u().SFInt32)),new(p())(s().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(p())(s().inputOutput,"writeInterval",new(u().SFFloat)(1)),new(p())(s().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(s().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(s().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(s().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(s().outputOnly,"timestamp",new(u().SFTime))]),enumerable:!0}});const M=X;O().add("SignalPdu","x_ite/Components/DIS/SignalPdu",M);const j=M;function A(t){_().call(this,t),V().call(this,t),this.addType(s().TransmitterPdu)}Object.assign(Object.setPrototypeOf(A.prototype,_().prototype),V().prototype,{initialize(){_().prototype.initialize.call(this),V().prototype.initialize.call(this)},dispose(){V().prototype.dispose.call(this),_().prototype.dispose.call(this)}}),Object.defineProperties(A,{typeName:{value:"TransmitterPdu",enumerable:!0},componentName:{value:"DIS",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(w())([new(p())(s().inputOutput,"metadata",new(u().SFNode)),new(p())(s().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(s().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(s().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(s().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(s().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(s().outputOnly,"isActive",new(u().SFBool)),new(p())(s().inputOutput,"address",new(u().SFString)("localhost")),new(p())(s().inputOutput,"antennaLocation",new(u().SFVec3f)),new(p())(s().inputOutput,"antennaPatternLength",new(u().SFInt32)),new(p())(s().inputOutput,"antennaPatternType",new(u().SFInt32)),new(p())(s().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(s().inputOutput,"cryptoKeyID",new(u().SFInt32)),new(p())(s().inputOutput,"cryptoSystem",new(u().SFInt32)),new(p())(s().inputOutput,"entityID",new(u().SFInt32)),new(p())(s().inputOutput,"frequency",new(u().SFInt32)),new(p())(s().inputOutput,"inputSource",new(u().SFInt32)),new(p())(s().inputOutput,"lengthOfModulationParameters",new(u().SFInt32)),new(p())(s().inputOutput,"modulationTypeDetail",new(u().SFInt32)),new(p())(s().inputOutput,"modulationTypeMajor",new(u().SFInt32)),new(p())(s().inputOutput,"modulationTypeSpreadSpectrum",new(u().SFInt32)),new(p())(s().inputOutput,"modulationTypeSystem",new(u().SFInt32)),new(p())(s().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(s().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(s().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(s().inputOutput,"port",new(u().SFInt32)),new(p())(s().inputOutput,"power",new(u().SFFloat)),new(p())(s().inputOutput,"radioEntityTypeCategory",new(u().SFInt32)),new(p())(s().inputOutput,"radioEntityTypeCountry",new(u().SFInt32)),new(p())(s().inputOutput,"radioEntityTypeDomain",new(u().SFInt32)),new(p())(s().inputOutput,"radioEntityTypeKind",new(u().SFInt32)),new(p())(s().inputOutput,"radioEntityTypeNomenclature",new(u().SFInt32)),new(p())(s().inputOutput,"radioEntityTypeNomenclatureVersion",new(u().SFInt32)),new(p())(s().inputOutput,"radioID",new(u().SFInt32)),new(p())(s().inputOutput,"readInterval",new(u().SFFloat)(.1)),new(p())(s().inputOutput,"relativeAntennaLocation",new(u().SFVec3f)),new(p())(s().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(p())(s().inputOutput,"siteID",new(u().SFInt32)),new(p())(s().inputOutput,"transmitFrequencyBandwidth",new(u().SFFloat)),new(p())(s().inputOutput,"transmitState",new(u().SFInt32)),new(p())(s().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(p())(s().inputOutput,"writeInterval",new(u().SFFloat)(1)),new(p())(s().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(s().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(s().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(s().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(s().outputOnly,"timestamp",new(u().SFTime))]),enumerable:!0}});const k=A;O().add("TransmitterPdu","x_ite/Components/DIS/TransmitterPdu",k);const H=k;n().add({name:"DIS",concreteNodes:[y,v,z,C,j,H],abstractNodes:[]});const q=void 0;O().add("DIS","assets/components/DIS",q)})();