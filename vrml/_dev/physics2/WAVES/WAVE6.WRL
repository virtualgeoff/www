#VRML V2.0 utf8

WorldInfo {
  title   "Wave Simulator, beta 5"
  info    "Geoff Pack, Spike, 1999"
}

NavigationInfo {
  headlight TRUE
  speed     25
  type      ["EXAMINE","WALK","ANY"]
}

Background {
  groundAngle [ 1.5708 ]
  groundColor [ 0.1 0.1 0.1, 0.1 0.1 0.1 ]
  skyAngle    [ 1.0, 1.5708 ]
  skyColor    [ 0.2 0.2 0.7, 0.3 0.3 0.8, 0.7 0.5 0.2]
}

Viewpoint {
  description "front"
  position    0 50 200
  orientation 1 0 0 -0.4
}
Viewpoint {
  description "side"
  position    -200 2 0
  orientation 0 1 0 -1.5708
}
Viewpoint {
  description "above"
  position    0 300 0
  orientation 1 0 0 -1.5708
}


DirectionalLight {
  direction         0 -1 -1
  ambientIntensity  0.5
}

#--------------------------------------
# Wave Proto

EXTERNPROTO sinWaveEG [
  eventOut  SFVec3f   queryReturnPoint
  eventOut  SFVec3f   queryReturnGradient
  eventIn   SFVec3f   queryPointInput

  field     SFColor   diffuseColor
  field     SFColor   specularColor
  field     SFFloat   shininess
  field     SFFloat   transparency

  field     SFInt32   xDimension
  field     SFFloat   xSpacing
  field     SFInt32   zDimension
  field     SFFloat   zSpacing
  field     SFFloat   waveAmplitude
  field     SFFloat   waveSpeed
  field     SFFloat   waveLength
] "sinWaveEG.wrl"

# Wave 1
DEF SeaWave sinWaveEG {
  waveAmplitude   5.0
  waveSpeed       10.0
  waveLength      50.0
}

#--------------------------------------
# Surfboard

EXTERNPROTO extendedMass [
  eventIn   SFVec3f     appliedForce
  eventIn   SFVec3f     appliedTorque
  eventOut  SFVec3f     positionOut

  field     SFVec3f     initialPosition
  field     SFVec3f     initialVelocity
  field     SFVec3f     initialAcceleration
  field     SFVec3f     initialOrientation
  field     SFVec3f     initialAngularVelocity
  field     SFVec3f     initialAngularAcceleration
  field     SFFloat     mass
  field     SFVec3f     momentsOfInertia
  field     MFNode      children
] "extendedMass.wrl"

DEF Surfboard extendedMass {
  initialPosition   -20 0 -20
  initialVelocity   0 0 0
  mass              80
  children [
    Inline {
      url "coord_axes.wrl"
    }
    Shape {
      appearance Appearance {
        material Material {
          diffuseColor  1 0 1
          shininess     .5
        }
      }
      geometry Box { size  0.5 0.05 2 }
    }
  ]
}


#--------------------------------------
# Force Scripts

DEF WaveForces Script {
  eventIn   SFVec3f     boardPositionIn
  eventIn   SFVec3f     waveHeightIn
  eventIn   SFVec3f     waveGradientIn

  eventOut  SFVec3f     forceOut

  field     SFVec3f     boardPosition   0 0 0
  field     SFVec3f     waveHeight      0 0 0
  field     SFVec3f     waveGradient    0 0 0
  field     SFVec3f     netForce        0 0 0

  field     SFFloat     boardMass       75.0
  field     SFFloat     boardBouyancy   700
  field     SFFloat     g               -9.8

  url "javascript:
    function initialize() {
    }
    function boardPositionIn(value) {
      boardPosition = value;
    }
    function waveHeightIn(value) {
      waveHeight = value;
    }
    function waveGradientIn(value) {
      waveGradient = value;
    }
    function eventsProcessed() {

      if (boardPosition[1] < waveHeight[1]) {
        // under water: bouyancy force > weight
        netForce[1] = boardBouyancy;
      } else if (boardPosition[1] > waveHeight[1]) {
        // above wave: bouyancy force < weight
        netForce[1] = boardMass * g;
      } else {
        // at wave height ... zero net vertical force
        netForce[1] = 0;
      }

      // horizontal Force propotional to gradient * wavespeed ???
      netForce[0] = 0;
      netForce[2] = waveGradient * 10;
      forceOut = netForce;
    }
  "
}

#--------------------------------------
# Routing

ROUTE Surfboard.positionOut TO SeaWave.queryPointInput

ROUTE Surfboard.positionOut TO WaveForces.boardPositionIn
ROUTE SeaWave.queryReturnPoint TO WaveForces.waveHeightIn
ROUTE SeaWave.queryReturnGradient TO WaveForces.waveGradientIn

ROUTE WaveForces.forceOut TO Surfboard.appliedForce

