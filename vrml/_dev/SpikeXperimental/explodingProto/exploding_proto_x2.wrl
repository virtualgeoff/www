#VRML V2.0 utf8

WorldInfo {
    title "ExplodingPolySet proto"
    info ["author V.Bulatov bulatov@dots.physics.orst.edu"]
}

# -----------------------------------------------------------
# PROTO accepts parameters similar to those of IndexedFaceSet
# and makes a set of separated polygons
# when it receives explode event, it explodes
# when fragments reach ground (y == 0), they stop.
# -----------------------------------------------------------

PROTO ExplodingPolySet [
	eventIn 	SFFloat 	set_scale
	eventIn 	SFBool 		explode
	eventOut	SFTime 		explode_time

	field 		MFInt32		coordIndex []
	field 		SFNode 		coord Coordinate {}
	field 		SFFloat 	rspeed 1  			# speed of random rotation of fragments
	field 		SFFloat 	cspeed 600 			# speed of fragments
	field 		SFTime 		duration 1 			# duration of explosion
	field 		SFFloat 	gravitation 9.81    # gravitational acceleration
	field 		SFFloat 	scale 1
]{
    DEF IFS IndexedFaceSet {
    	solid FALSE
    	coordIndex []
    	coord Coordinate {
        	point []
    	}
    }

    DEF TIMER TimeSensor {
    	cycleInterval IS duration
    }

    DEF ExplodingPolySet Script {

    	eventIn 	SFFloat set_scale IS set_scale
    	eventIn 	SFBool 	explode IS explode
    	eventIn 	SFTime 	set_time
    	eventOut 	SFTime 	explode_time IS explode_time

    	field 	MFInt32 	coordIndex IS coordIndex
    	field 	SFNode 		coord IS coord
    	field 	SFNode 		ifs USE IFS
    	field 	MFInt32 	ci []
    	field 	MFVec3f 	vertex []
    	field 	SFFloat 	scale IS scale
    	field 	SFInt32 	pcount 0
    	field 	MFVec3f 	centers []
    	field 	MFVec3f 	speed []
    	field 	MFInt32 	faces []
    	field 	MFRotation 	rot []
    	field 	MFVec3f 	vertex0 []

    	field 	SFNode 		timer USE TIMER
    	field 	SFTime 		t0 0 		# time of explosion

    	field 	SFFloat 	rspeed IS rspeed
    	field 	SFFloat 	cspeed IS cspeed
    	field 	SFFloat 	gravitation IS gravitation

    	url ["javascript:

    		function set_scale(v,t){
        		scale = v;
        		init();
    		}

    		function initialize(){
        		init();
    		}

    		function init(){
				var fcount = 0;
        		var vcount = 0;
        		var ci_count = 0;
        		var fv = new MFVec3f();
        		var center = new SFVec3f(0,0,0);

        		for(i = 0; i < coordIndex.length; i++){
        			if(coordIndex[i] != -1){
            			fv[fcount++] = coord.point[coordIndex[i]];
					} else { // new face
            			center.x = center.y = center.z = 0;
            			for( j = 0; j < fcount; j++){
            				center.x += fv[j].x;
            				center.y += fv[j].y;
            				center.z += fv[j].z;
            			}
            			center.x /= fcount;
            			center.y /= fcount;
            			center.z /= fcount;

            			// first index of current face
            			faces[2*pcount] = vcount;
            			for( j = 0; j < fcount; j++){
            				vertex0[vcount] = new SFVec3f(
                     			(fv[j].x-center.x)*scale,
                     			(fv[j].y-center.y)*scale,
                     			(fv[j].z-center.z)*scale);
            				vertex[vcount] = vertex0[vcount].add(center);

            				ci[ci_count++] = vcount;
            				//trace(vertex[vcount]);
            				vcount++;
            			}
            			ci[ci_count++] = -1;
            			fcount = 0;

            			// center of current face
           				centers[pcount] = new SFVec3f(center.x, center.y, center.z);
            			speed[pcount] = centers[pcount].normalize().multiply(cspeed);
            			// transformation of current face
            			rot[pcount] = new SFRotation(
                           new SFVec3f(Math.random(),Math.random(),Math.random()),0);
            			// last index of current face
            			faces[2*pcount+1] = vcount;
            			pcount ++;
        			}
        		}
        		ifs.coord.set_point = vertex;
        		ifs.set_coordIndex = ci;
    		}

    		function explode(v,t){
        		timer.set_startTime = t;
        		timer.set_stopTime = t+2;
        		timer.set_enabled = TRUE;
        		explode_time = t;
        		t0 = t;
    		}

    		function set_time(v,t){
        		//trace(fraction);
        		var time = t-t0;
        		var center = new SFVec3f(0,0,0);
        		var vert = new SFVec3f(0,0,0);

        		for(var p = 0; p < pcount; p++){
        			center = centers[p];
        			center.x += speed[p].x*time;
        			center.y += speed[p].y*time;
        			center.z += speed[p].z*time;

        			for(var f = faces[2*p]; f < faces[2*p+1];f++){
            			var r = rot[p];
            			r.angle = time*rspeed;
            			vert = r.multVec(vertex0[f]);
            			vert.x += center.x;
            			vert.y += center.y;
            			vert.z += center.z;
            			vertex[f] = vert;
            			//trace(f);
        			}
        		}

        		ifs.coord.set_point = vertex;
    		}
    	"]
    }

    ROUTE TIMER.time TO ExplodingPolySet.set_time
}

# ----------------------
# example of use
# ----------------------

# ----------------------
# example of use
# ----------------------

DEF TRANS Transform {
	translation 0 0 0
    scale 1 1 1
    children [
    	DEF TOUCH TouchSensor{}
    	Shape {
    		geometry DEF POLY ExplodingPolySet {
        		duration 10
        		cspeed 10
        		gravitation 1
        		coord Coordinate {
        			point [
        		  		0 40.98 0, 36.66 18.33 0, 11.33 18.33 -34.86, -29.66 18.33 -21.55,
 	 	          		-29.66 18.33 21.55, 11.33 18.33 34.86, 29.66 -18.33 -21.55,
 	 	          		-11.33 -18.33 -34.86, -36.66 -18.33 0, -11.33 -18.33 34.86,
 	 	          		29.66 -18.33 21.55, 0 -40.98 0, 14.78 38.23 0, 27.58 30.32 0,
 	 	          		4.569 38.23 -14.06, 8.522 30.32 -26.23, -11.96 38.23 -8.69,
 	 	          		-22.31 30.32 -16.21, -11.96 38.23 8.69, -22.31 30.32 16.21,
 	 	          		4.569 38.23 14.06, 8.522 30.32 26.23, 32.15 21.18 -14.06,
 	 	          		23.31 21.18 -26.23, -3.439 21.18 -34.92, -17.74 21.18 -30.27,
 	 	          		-34.27 21.18 -7.52, -34.27 21.18 7.52, -17.74 21.18 30.27,
 	 	          		-3.439 21.18 34.92, 23.31 21.18 26.23, 32.15 21.18 14.06,
 	 	          		39.54 6.397 -8.69, 37.1 -6.397 -16.21, 3.953 6.397 -40.29,
 	 	          		-3.953 -6.397 -40.29, -37.1 6.397 -16.21, -39.54 -6.397 -8.69,
 	 	          		-26.88 6.397 30.27, -20.48 -6.397 34.92, 20.48 6.397 34.92,
 	 	          		26.88 -6.397 30.27, 39.54 6.397 8.69, 37.1 -6.397 16.21,
 	 	          		20.48 6.397 -34.92, 26.88 -6.397 -30.27, -26.88 6.397 -30.27,
 	 	          		-20.48 -6.397 -34.92, -37.1 6.397 16.21, -39.54 -6.397 8.69,
 	 	          		3.953 6.397 40.29, -3.953 -6.397 40.29, 17.74 -21.18 -30.27,
 	 	          		3.439 -21.18 -34.92, -23.31 -21.18 -26.23, -32.15 -21.18 -14.06,
 	 	          		-32.15 -21.18 14.06, -23.31 -21.18 26.23, 3.439 -21.18 34.92,
 	 	          		17.74 -21.18 30.27, 34.27 -21.18 7.52, 34.27 -21.18 -7.52,
 	 	          		11.96 -38.23 -8.69, 22.31 -30.32 -16.21, -4.569 -38.23 -14.06,
 	 	          		-8.522 -30.32 -26.23, -14.78 -38.23 0, -27.58 -30.32 0,
 	 	          		-4.569 -38.23 14.06, -8.522 -30.32 26.23, 11.96 -38.23 8.69,
 	 	          		22.31 -30.32 16.21, 19.65 33.01 -14.28, -7.507 33.01 -23.1,
 	 	          		-24.29 33.01 0, -7.507 33.01 23.1, 19.65 33.01 14.28,
 	 	          		40.39 -6.965 0, 12.48 -6.965 -38.41, -32.68 -6.965 -23.74,
 	 	          		-32.68 -6.965 23.74, 12.48 -6.965 38.41, 32.68 6.965 -23.74,
 	 	          		-12.48 6.965 -38.41, -40.39 6.965 0, -12.48 6.965 38.41,
 	 	          		32.68 6.965 23.74, 7.507 -33.01 -23.1, -19.65 -33.01 -14.28,
          		  		-19.65 -33.01 14.28, 7.507 -33.01 23.1, 24.29 -33.01 0
          		  	]
        		}
        		coordIndex [
	 	          	0, 12, 14, -1, 12, 13, 72, -1, 12, 72, 14, -1, 14, 72, 15, -1,
	 	          	13, 1, 22, -1, 13, 22, 72, -1, 72, 22, 23, -1, 72, 23, 15, -1,
	 	          	15, 23, 2, -1, 0, 14, 16, -1, 14, 15, 73, -1, 14, 73, 16, -1,
	 	          	16, 73, 17, -1, 15, 2, 24, -1, 15, 24, 73, -1, 73, 24, 25, -1,
	 	          	73, 25, 17, -1, 17, 25, 3, -1, 0, 16, 18, -1, 16, 17, 74, -1,
	 	          	16, 74, 18, -1, 18, 74, 19, -1, 17, 3, 26, -1, 17, 26, 74, -1,
	 	          	74, 26, 27, -1, 74, 27, 19, -1, 19, 27, 4, -1, 0, 18, 20, -1,
	 	          	18, 19, 75, -1, 18, 75, 20, -1, 20, 75, 21, -1, 19, 4, 28, -1,
	 	          	19, 28, 75, -1, 75, 28, 29, -1, 75, 29, 21, -1, 21, 29, 5, -1,
	 	          	0, 20, 12, -1, 20, 21, 76, -1, 20, 76, 12, -1, 12, 76, 13, -1,
	 	          	21, 5, 30, -1, 21, 30, 76, -1, 76, 30, 31, -1, 76, 31, 13, -1,
	 	          	13, 31, 1, -1, 1, 42, 32, -1, 42, 43, 77, -1, 42, 77, 32, -1,
	 	          	32, 77, 33, -1, 43, 10, 60, -1, 43, 60, 77, -1, 77, 60, 61, -1,
	 	          	77, 61, 33, -1, 33, 61, 6, -1, 2, 44, 34, -1, 44, 45, 78, -1,
	 	          	44, 78, 34, -1, 34, 78, 35, -1, 45, 6, 52, -1, 45, 52, 78, -1,
	 	          	78, 52, 53, -1, 78, 53, 35, -1, 35, 53, 7, -1, 3, 46, 36, -1,
	 	          	46, 47, 79, -1, 46, 79, 36, -1, 36, 79, 37, -1, 47, 7, 54, -1,
	 	          	47, 54, 79, -1, 79, 54, 55, -1, 79, 55, 37, -1, 37, 55, 8, -1,
	 	          	4, 48, 38, -1, 48, 49, 80, -1, 48, 80, 38, -1, 38, 80, 39, -1,
	 	          	49, 8, 56, -1, 49, 56, 80, -1, 80, 56, 57, -1, 80, 57, 39, -1,
	 	          	39, 57, 9, -1, 5, 50, 40, -1, 50, 51, 81, -1, 50, 81, 40, -1,
	 	          	40, 81, 41, -1, 51, 9, 58, -1, 51, 58, 81, -1, 81, 58, 59, -1,
	 	          	81, 59, 41, -1, 41, 59, 10, -1, 6, 45, 33, -1, 45, 44, 82, -1,
	 	          	45, 82, 33, -1, 33, 82, 32, -1, 44, 2, 23, -1, 44, 23, 82, -1,
	 	          	82, 23, 22, -1, 82, 22, 32, -1, 32, 22, 1, -1, 7, 47, 35, -1,
	 	          	47, 46, 83, -1, 47, 83, 35, -1, 35, 83, 34, -1, 46, 3, 25, -1,
	 	          	46, 25, 83, -1, 83, 25, 24, -1, 83, 24, 34, -1, 34, 24, 2, -1,
	 	          	8, 49, 37, -1, 49, 48, 84, -1, 49, 84, 37, -1, 37, 84, 36, -1,
	 	          	48, 4, 27, -1, 48, 27, 84, -1, 84, 27, 26, -1, 84, 26, 36, -1,
	 	          	36, 26, 3, -1, 9, 51, 39, -1, 51, 50, 85, -1, 51, 85, 39, -1,
	 	          	39, 85, 38, -1, 50, 5, 29, -1, 50, 29, 85, -1, 85, 29, 28, -1,
	 	          	85, 28, 38, -1, 38, 28, 4, -1, 10, 43, 41, -1, 43, 42, 86, -1,
	 	          	43, 86, 41, -1, 41, 86, 40, -1, 42, 1, 31, -1, 42, 31, 86, -1,
	 	          	86, 31, 30, -1, 86, 30, 40, -1, 40, 30, 5, -1, 11, 64, 62, -1,
	 	          	64, 65, 87, -1, 64, 87, 62, -1, 62, 87, 63, -1, 65, 7, 53, -1,
	 	          	65, 53, 87, -1, 87, 53, 52, -1, 87, 52, 63, -1, 63, 52, 6, -1,
	 	          	11, 66, 64, -1, 66, 67, 88, -1, 66, 88, 64, -1, 64, 88, 65, -1,
	 	          	67, 8, 55, -1, 67, 55, 88, -1, 88, 55, 54, -1, 88, 54, 65, -1,
	 	          	65, 54, 7, -1, 11, 68, 66, -1, 68, 69, 89, -1, 68, 89, 66, -1,
	 	          	66, 89, 67, -1, 69, 9, 57, -1, 69, 57, 89, -1, 89, 57, 56, -1,
	 	          	89, 56, 67, -1, 67, 56, 8, -1, 11, 70, 68, -1, 70, 71, 90, -1,
	 	          	70, 90, 68, -1, 68, 90, 69, -1, 71, 10, 59, -1, 71, 59, 90, -1,
	 	          	90, 59, 58, -1, 90, 58, 69, -1, 69, 58, 9, -1, 11, 62, 70, -1,
	 	          	62, 63, 91, -1, 62, 91, 70, -1, 70, 91, 71, -1, 63, 6, 61, -1,
          		  	63, 61, 91, -1, 91, 61, 60, -1, 91, 60, 71, -1, 71, 60, 10, -1
          		]
    		}
    		appearance Appearance {
        		material Material {
        			diffuseColor    0 0.379 0.761
        		}
    		}
    	}
    ]
}


ROUTE TOUCH.isActive TO POLY.explode

NavigationInfo {
	type "EXAMINE"
    headlight TRUE
}

Viewpoint {
    position 0 1.5 200
}

DirectionalLight{
    ambientIntensity 0
    direction 0.3 -1 -0.1
}

Transform {
	translation   0 0 0
	rotation      0 1 0 0
	scale         10 10 10
	children [
    	Inline {
    		url       "grid.wrl"
		}
	]
}

