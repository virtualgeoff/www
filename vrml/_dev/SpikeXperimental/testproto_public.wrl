#VRML V2.0 utf8DEF gr_testroot Group { }Transform {	translation 0 0 2	children [		Shape { geometry Sphere {} appearance Appearance { material Material { emissiveColor 1 0 0 } } }		DEF ts_1 TouchSensor {}	]}DEF sc_testmany Script {	field MFNode addnodes []	field SFString s ""	field SFNode rootnode USE gr_testroot	field SFVec3f pos 0 0 0	eventIn SFTime removeNow	directOutput TRUE	url ["javascript:		function initialize() {			var i;			s = 'PROTO TestMany [ field SFVec3f position 0 0 0  field MFString description [] ] { Transform { translation IS position  children [ Shape { geometry Sphere {} appearance Appearance { material Material { emissiveColor 0 0 01 transparency .75 } } } Shape { geometry Text { string IS description } appearance Appearance { material Material { emissiveColor 0 1 0 } } } ] } }';			for (i=0;i<500;i++) {				pos.x = Math.sin(i/6.28) * i/20;				pos.y = Math.cos(i/6.28) * i/20;				pos.z = -i/10;				s += 'TestMany { position ' + pos.toString() + ' description \"#' + i.toString() + '\" } ';			} 			// Keeping addnodes array with copies of nodes allows us			// to update them dynamically with directOutput			// addnodes = Browser.createVrmlFromString(s);			// but you can also add the nodes directly from the Browser method			rootnode.addChildren = Browser.createVrmlFromString(s);						}		function removeNow(v, t) {		    // try this if we keep the addnodes array			// rootnode.removeChildren addnodes;			// or, without reference to the nodes we added we must kill all children			rootnode.set_children = addnodes;		}		"]}ROUTE ts_1.touchTime TO sc_testmany.removeNow